@model NoteUsersViewModel

@{
    ViewData["Title"] = "Create";
    //prepraring data for select list items
    List<SelectListItem> userItems = Model.Users.ConvertAll(user =>
    {
        return new SelectListItem
        {
            Text = user.Name,
            Value = user.Id.ToString()
        };
    });
}

<h1>Create</h1>

<h4>Note</h4>
<hr />
<form asp-action="Create" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Note.Title" class="control-label"></label>
        <input asp-for="Note.Title" class="form-control" style="width: 200px;" />
        <span asp-validation-for="Note.Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Note.Text" class="control-label"></label>
        <textarea asp-for="Note.Text" class="form-control" style="width: 600px; height: 400px;"></textarea>
        <span asp-validation-for="Note.Text" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Note.User" class="control-label"></label>
        <select asp-items="userItems" asp-for="SelectedUser" ></select>
        <span asp-validation-for="Note.User" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
