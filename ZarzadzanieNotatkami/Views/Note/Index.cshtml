@model NotesViewModel

@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor

@{
    ViewData["Title"] = "Notes Managment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    //gets cookie from response sent to view
    string cookieHeader=httpContextAccessor.HttpContext.Response?.Headers["Set-Cookie"];
    string userId = string.Empty;
    //if cookie contains userId
    if (cookieHeader!=null && cookieHeader.StartsWith("UserId"))
    {
        int pos1 = cookieHeader.IndexOf("=");
        int pos2 = cookieHeader.IndexOf(";");
        userId = cookieHeader.Substring(pos1 + 1, pos2 - pos1 - 1);

    }
    //if not then select all users
    else
    {
        userId = (-1).ToString();
    }
    
    //objects containing title for note and user
    var headerMetaData = Model.Notes?.FirstOrDefault();
    var headerForUser = Model.Users.FirstOrDefault();

    //object containg all users for ddl
    List<SelectListItem> userListItems = Model.Users.ConvertAll(user =>
    {
        return new SelectListItem
        {
            Text = user.Name,
            Value = user.Id.ToString()
        };
    });
}

<h1>Notes Manager</h1>

<p>
    <a asp-action="Create">Create New Note</a>
</p>
<p>
    <a asp-action="Create" asp-controller="User">Create New User</a>
</p>
<p>
    <a class="btn btn-dark" asp-controller="User" asp-action="Manage">Manage users</a>
</p>

<div class="list-inline">
    <p class="list-inline-item">Sort title: </p>
    <a asp-action="SortAsc" class="btn btn-primary">Sort ascending</a>
    <a asp-action="SortDesc" class="btn btn-primary">Sort descending</a>

    <div class="list-inline-item">
        <label asp-for="Users"></label>
        <select id="userSelectList" asp-items="@userListItems" asp-for="@userId">
            <option value="-1">All</option>
        </select>
    </div>
    <div class="list-inline-item">
        <a class="btn btn-primary" onclick="changeUser();">Change User</a>
    </div>
</div>

<form method="post" asp-action="Importants">
    @* Needed later for importants actualization in Importants action *@
    @for (int i = 0; i < Model.Notes.Where(note => note != null).Count(); i++)
    {
        @Html.HiddenFor(model => Model.Notes[i].Id);
        @Html.HiddenFor(model => Model.Notes[i].Text);
        @Html.HiddenFor(model => Model.Notes[i].Title);
        @Html.HiddenFor(model => Model.Notes[i].User);
        @Html.HiddenFor(model => Model.Notes[i].UserId);
    }

    <table class="table table-hover table-striped">
        <thead>
            <tr>
                <th style="width:auto;">
                    @Html.DisplayNameFor(model => headerMetaData.Title)
                </th>
                <th>Important</th>
                <th>
                    @Html.DisplayNameFor(model => headerForUser.Name)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Notes.Count(); i++)
            {
                var item = Model.Notes[i];

                <tr>
                    <td style="width:auto;">
                        @Html.DisplayFor(modelItem => Model.Notes[i].Title)
                    </td>
                    <td>
                        <input type="checkbox" asp-for="Notes[i].Important" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.Notes[i].User.Name)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
            <tr>
                <td></td>
                <td><input class="btn btn-dark" type="submit" value="Send new importants" title="Updates all important fields within all records" /></td>
                <td></td>
            </tr>
        </tbody>
    </table>
</form>
@section Scripts{
    <script type="text/javascript">
        function changeUser() {
            var userSelectList = document.getElementById("userSelectList");
            //selected id of selected user
            var id = userSelectList.value;
            //get to ChangeUser action in Note controller
            location.href = '/Note/ChangeUser/' + id;

        }

    </script>
}